generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email          String    @unique
  name           String?
  image          String?
  emailVerified  DateTime?
  hashedPassword String?
  createAt       DateTime  @default(dbgenerated("now()"))
  updatedAt      DateTime  @updatedAt
  favoriteIds    String[]
  sessions       session[]
  accounts       account[]
}

model account {
  id                String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId            String  @db.Uuid
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text()
  access_token      String? @db.Text()
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text()
  session_state     String?

  user user @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model session {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_token String   @unique
  userId        String   @db.Uuid
  expires       DateTime

  user user @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model verification_token {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model movie {
  id           String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title        String
  descriptin   String
  videoUrl     String
  thumbnailUrl String
  genre        String
  duration     String
}
